@using MyLittleContentEngine.Services.Content.TableOfContents

@if (Items != null && Items.Any())
{
    <nav class="@($"breadcrumbs {CssClass}".Trim())" aria-label="Breadcrumb">
        <ol class="breadcrumbs-list">
            @foreach (var (breadcrumb, index) in Items.Select((b, i) => (b, i)))
            {
                <li class="breadcrumb-item @(breadcrumb.IsCurrent ? "breadcrumb-current" : "")">
                    @if (index > 0)
                    {
                        <span class="breadcrumb-separator" aria-hidden="true">
                            @if (Separator != null)
                            {
                                @Separator
                            }
                            else
                            {
                                <svg class="breadcrumb-chevron" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                </svg>
                            }
                        </span>
                    }
                    
                    @if (breadcrumb.IsCurrent)
                    {
                        <span aria-current="page">@breadcrumb.Name</span>
                    }
                    else
                    {
                        <a href="@breadcrumb.Href">@breadcrumb.Name</a>
                    }
                </li>
            }
        </ol>
    </nav>
}

@code {
    /// <summary>
    /// The breadcrumb items to display in the navigation trail.
    /// </summary>
    [Parameter, EditorRequired] 
    public IEnumerable<BreadcrumbItem>? Items { get; set; }
    
    /// <summary>
    /// Optional CSS class to apply to the nav element.
    /// </summary>
    [Parameter] 
    public string CssClass { get; set; } = "";
    
    /// <summary>
    /// Optional separator between breadcrumb items. Defaults to chevron right.
    /// </summary>
    [Parameter]
    public RenderFragment? Separator { get; set; }
    
    /// <summary>
    /// Whether to show the home icon for the first item instead of text.
    /// </summary>
    [Parameter]
    public bool ShowHomeIcon { get; set; } = false;
    
    /// <summary>
    /// Optional home icon to display for the first breadcrumb item.
    /// </summary>
    [Parameter]
    public RenderFragment? HomeIcon { get; set; }
}